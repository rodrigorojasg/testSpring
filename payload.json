{
  "model": "gpt-4",
  "messages": [
    {
      "role": "system",
      "content": "Eres un generador de código Java experto en Spring Boot. Usa solo clases válidas. Respeta código original si fue entregado."
    },
    {
      "role": "user",
      "content": "nombre: Obtener empleados nacidos antes del año 2000\ncomo: Administrador del sistema\nquiero: Obtener una lista de empleados que hayan nacido antes del año 2000\npara: Poder segmentar  a los empleados por generaciones y aplicar políticas diferenciadas\nClases detectadas en el repositorio base:\nrepositorio-base/src/main/java/test/core/api/model/Employee.java\nrepositorio-base/src/main/java/test/core/api/repository/EmployeeRepository.java\nrepositorio-base/src/main/java/test/core/api/EmployeeCoreApiApplication.java\nrepositorio-base/src/main/java/test/core/api/controller/EmployeeController.java\nrepositorio-base/src/main/java/test/core/api/service/EmployeeService.java\nrepositorio-base/src/main/java/test/core/api/service/impl/EmployeeServiceImpl.java\n\n--- ANÁLISIS (Fase 1) ---\n1. Qué clases pueden reutilizarse sin modificar.\n2. Qué clases deben ser modificadas (añadir métodos, anotaciones, etc.).\n3. Qué clases deben ser nuevas.\n\n--- DISEÑO (Fase 2) ---\n- Usa el contenido exacto de clases marcadas como modificables que aparece a continuación.\n- No elimines nada del contenido original. Solo agrega lo que se indica en la historia de usuario.\n\n--- CLASES COMPLETAS PARA MODIFICAR ---\n\n// Inicio de clase original: repositorio-base/src/main/java/test/core/api/controller/EmployeeController.java\n\npackage test.core.api.controller;\n\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.DeleteMapping;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.PutMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport test.core.api.model.Employee;\nimport test.core.api.service.EmployeeService;\n\n@RestController\n@RequestMapping(\"/api/employees\")\npublic class EmployeeController {\n\n    @Autowired\n    private EmployeeService service;\n\n    @GetMapping\n    public List<Employee> getAll() {\n        System.out.println(\"Fetching all employees\");\n        return service.getAllEmployees();\n    }\n\n    @DeleteMapping(\"/{id}\")\n    public ResponseEntity<Void> delete(@PathVariable Long id) {\n        service.deleteEmployeeById(id);\n        return ResponseEntity.noContent().build();\n    }\n\n    @PutMapping\n    public Employee insert(@RequestBody Employee employee) {\n        return service.saveEmployee(employee);\n    }\n\n   \n}\n\n\n\n\n\n\n// Fin de clase original: repositorio-base/src/main/java/test/core/api/controller/EmployeeController.java\n\n\n// Inicio de clase original: repositorio-base/src/main/java/test/core/api/service/impl/EmployeeServiceImpl.java\n\npackage test.core.api.service.impl;\n\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Component;\n\nimport test.core.api.model.Employee;\nimport test.core.api.repository.EmployeeRepository;\nimport test.core.api.service.EmployeeService;\n\n@Component\npublic class EmployeeServiceImpl implements EmployeeService {\n\t\n\t    @Autowired\n\t    private EmployeeRepository repository;\n\n\t    public List<Employee> getAllEmployees() {\n\t        return (List<Employee>) repository.findAll();\n\t    }\n\n\t    public void deleteEmployeeById(Long id) {\n\t        repository.deleteById(id);\n\t    }\n\n\t    public Employee saveEmployee(Employee employee) {\n\t        return repository.save(employee); \n\t    }\n}\n// Fin de clase original: repositorio-base/src/main/java/test/core/api/service/impl/EmployeeServiceImpl.java\n\n\n--- GENERACIÓN (Fase 3) ---\n- Genera únicamente las clases nuevas o modificadas.\n- Usa exactamente el contenido original y agrega lo necesario.\n- No omitas métodos ni reemplaces clases enteras.\n- Cada clase comienza con 'package ...'. No incluyas explicaciones ni comentarios adicionales."
    }
  ],
  "temperature": 0.3
}
