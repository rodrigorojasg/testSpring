{
  "id": "chatcmpl-BfbCOjeBKsVyCgARj6EU3OJpwgOB7",
  "object": "chat.completion",
  "created": 1749254140,
  "model": "gpt-4-0613",
  "choices": [
    {
      "index": 0,
      "message": {
        "role": "assistant",
        "content": "package com.example.EmployeeCoreApi.service.impl;\n\nimport com.example.EmployeeCoreApi.exception.EmployeeException;\nimport com.example.EmployeeCoreApi.model.Employee;\nimport com.example.EmployeeCoreApi.repository.EmployeeRepository;\nimport com.example.EmployeeCoreApi.service.EmployeeService;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport java.util.Optional;\n\n@Service\npublic class EmployeeServiceImpl implements EmployeeService {\n\n    @Autowired\n    private EmployeeRepository employeeRepository;\n\n    @Override\n    public void deleteEmployeeById(Long id) {\n        Optional<Employee> employeeOptional = employeeRepository.findById(id);\n        if (employeeOptional.isPresent()) {\n            Employee employee = employeeOptional.get();\n\n            // BEGIN MODIFICATION BY AI\n            if (\"Femenino\".equals(employee.getGender())) {\n                throw new EmployeeException(\"No se permite eliminar empleados de gÃ©nero femenino\");\n            }\n            // END MODIFICATION BY AI\n\n            employeeRepository.deleteById(id);\n        } else {\n            throw new EmployeeException(\"Empleado no encontrado\");\n        }\n    }\n\n    // Other methods...\n}\n\n// Test class\npackage com.example.EmployeeCoreApi.service.impl;\n\nimport com.example.EmployeeCoreApi.exception.EmployeeException;\nimport com.example.EmployeeCoreApi.model.Employee;\nimport com.example.EmployeeCoreApi.repository.EmployeeRepository;\nimport org.junit.jupiter.api.BeforeEach;\nimport org.junit.jupiter.api.Test;\nimport org.mockito.InjectMocks;\nimport org.mockito.Mock;\nimport org.mockito.MockitoAnnotations;\n\nimport java.util.Optional;\n\nimport static org.junit.jupiter.api.Assertions.assertThrows;\nimport static org.mockito.Mockito.when;\n\npublic class EmployeeServiceImplTest {\n\n    @InjectMocks\n    private EmployeeServiceImpl employeeService;\n\n    @Mock\n    private EmployeeRepository employeeRepository;\n\n    @BeforeEach\n    public void setup() {\n        MockitoAnnotations.initMocks(this);\n    }\n\n    @Test\n    public void testDeleteEmployeeById_FemaleEmployee_ExceptionThrown() {\n        Employee employee = new Employee();\n        employee.setId(1L);\n        employee.setGender(\"Femenino\");\n\n        when(employeeRepository.findById(1L)).thenReturn(Optional.of(employee));\n\n        assertThrows(EmployeeException.class, () -> employeeService.deleteEmployeeById(1L));\n    }\n\n    @Test\n    public void testDeleteEmployeeById_MaleEmployee_NoExceptionThrown() {\n        Employee employee = new Employee();\n        employee.setId(1L);\n        employee.setGender(\"Masculino\");\n\n        when(employeeRepository.findById(1L)).thenReturn(Optional.of(employee));\n\n        employeeService.deleteEmployeeById(1L); // No exception thrown\n    }\n}",
        "refusal": null,
        "annotations": []
      },
      "logprobs": null,
      "finish_reason": "stop"
    }
  ],
  "usage": {
    "prompt_tokens": 730,
    "completion_tokens": 503,
    "total_tokens": 1233,
    "prompt_tokens_details": {
      "cached_tokens": 0,
      "audio_tokens": 0
    },
    "completion_tokens_details": {
      "reasoning_tokens": 0,
      "audio_tokens": 0,
      "accepted_prediction_tokens": 0,
      "rejected_prediction_tokens": 0
    }
  },
  "service_tier": "default",
  "system_fingerprint": null
}
