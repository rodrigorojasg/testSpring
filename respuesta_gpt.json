{
  "id": "chatcmpl-BfGjkq1d38FIhmyNsYT2OqEuzrB2J",
  "object": "chat.completion",
  "created": 1749175484,
  "model": "gpt-4-0613",
  "choices": [
    {
      "index": 0,
      "message": {
        "role": "assistant",
        "content": "--- CLASES MODIFICADAS ---\n\n// Inicio de clase modificada: repositorio-base/src/main/java/test/core/api/controller/EmployeeController.java\n\npackage test.core.api.controller;\n\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.http.ResponseEntity;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PathVariable;\nimport org.springframework.web.bind.annotation.PutMapping;\nimport org.springframework.web.bind.annotation.RequestBody;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\n\nimport test.core.api.model.Employee;\nimport test.core.api.service.EmployeeService;\n\n@RestController\n@RequestMapping(\"/api/employees\")\npublic class EmployeeController {\n\n    @Autowired\n    private EmployeeService service;\n\n    @GetMapping\n    public List<Employee> getAll() {\n        System.out.println(\"Fetching all employees\");\n        return service.getAllEmployees();\n    }\n\n    @GetMapping(\"/bornBefore2000\")\n    public List<Employee> getEmployeesBornBefore2000() {\n        System.out.println(\"Fetching employees born before 2000\");\n        return service.getEmployeesBornBefore2000();\n    }\n\n    @DeleteMapping(\"/{id}\")\n    public ResponseEntity<Void> delete(@PathVariable Long id) {\n        service.deleteEmployeeById(id);\n        return ResponseEntity.noContent().build();\n    }\n\n    @PutMapping\n    public Employee insert(@RequestBody Employee employee) {\n        return service.saveEmployee(employee);\n    }\n}\n\n// Fin de clase modificada: repositorio-base/src/main/java/test/core/api/controller/EmployeeController.java\n\n\n// Inicio de clase modificada: repositorio-base/src/main/java/test/core/api/service/impl/EmployeeServiceImpl.java\n\npackage test.core.api.service.impl;\n\nimport java.util.List;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Component;\n\nimport test.core.api.model.Employee;\nimport test.core.api.repository.EmployeeRepository;\nimport test.core.api.service.EmployeeService;\n\n@Component\npublic class EmployeeServiceImpl implements EmployeeService {\n\t\n\t    @Autowired\n\t    private EmployeeRepository repository;\n\n\t    public List<Employee> getAllEmployees() {\n\t        return (List<Employee>) repository.findAll();\n\t    }\n\n\t    public List<Employee> getEmployeesBornBefore2000() {\n\t        return repository.findEmployeesBornBefore2000();\n\t    }\n\n\t    public void deleteEmployeeById(Long id) {\n\t        repository.deleteById(id);\n\t    }\n\n\t    public Employee saveEmployee(Employee employee) {\n\t        return repository.save(employee); \n\t    }\n}\n\n// Fin de clase modificada: repositorio-base/src/main/java/test/core/api/service/impl/EmployeeServiceImpl.java\n\n--- CLASES NUEVAS ---\n\n// Inicio de clase nueva: repositorio-base/src/main/java/test/core/api/repository/EmployeeRepository.java\n\npackage test.core.api.repository;\n\nimport java.util.List;\n\nimport org.springframework.data.jpa.repository.Query;\nimport org.springframework.data.repository.CrudRepository;\nimport org.springframework.stereotype.Repository;\n\nimport test.core.api.model.Employee;\n\n@Repository\npublic interface EmployeeRepository extends CrudRepository<Employee, Long> {\n\n    @Query(\"SELECT e FROM Employee e WHERE YEAR(e.birthDate) < 2000\")\n    List<Employee> findEmployeesBornBefore2000();\n}\n\n// Fin de clase nueva: repositorio-base/src/main/java/test/core/api/repository/EmployeeRepository.java",
        "refusal": null,
        "annotations": []
      },
      "logprobs": null,
      "finish_reason": "stop"
    }
  ],
  "usage": {
    "prompt_tokens": 839,
    "completion_tokens": 642,
    "total_tokens": 1481,
    "prompt_tokens_details": {
      "cached_tokens": 0,
      "audio_tokens": 0
    },
    "completion_tokens_details": {
      "reasoning_tokens": 0,
      "audio_tokens": 0,
      "accepted_prediction_tokens": 0,
      "rejected_prediction_tokens": 0
    }
  },
  "service_tier": "default",
  "system_fingerprint": null
}
