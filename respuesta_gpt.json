{
  "id": "chatcmpl-BfWS3l7C2zkBH7n9pznIWTZKD5Wxz",
  "object": "chat.completion",
  "created": 1749235891,
  "model": "gpt-4-0613",
  "choices": [
    {
      "index": 0,
      "message": {
        "role": "assistant",
        "content": "package com.example.demo.service;\n\nimport com.example.demo.exception.GenderException;\nimport com.example.demo.model.Employee;\nimport com.example.demo.repository.EmployeeRepository;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\n@Service\npublic class EmployeeService {\n\n    @Autowired\n    private EmployeeRepository employeeRepository;\n\n    public void deleteEmployee(Long id) {\n        Employee employee = employeeRepository.findById(id)\n                .orElseThrow(() -> new IllegalArgumentException(\"Invalid employee Id:\" + id));\n        \n        // Start of AI modification\n        if(employee.getGender().equalsIgnoreCase(\"Femenino\")) {\n            throw new GenderException(\"Cannot delete employee of gender 'Femenino'\");\n        }\n        // End of AI modification\n\n        employeeRepository.delete(employee);\n    }\n}\npackage com.example.demo.exception;\n\npublic class GenderException extends RuntimeException {\n    public GenderException(String message) {\n        super(message);\n    }\n}\npackage com.example.demo.model;\n\nimport javax.persistence.Entity;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.GenerationType;\nimport javax.persistence.Id;\n\n@Entity\npublic class Employee {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.AUTO)\n    private Long id;\n    private String name;\n    private String gender;\n\n    // getters and setters\n}\npackage com.example.demo.repository;\n\nimport com.example.demo.model.Employee;\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.stereotype.Repository;\n\n@Repository\npublic interface EmployeeRepository extends JpaRepository<Employee, Long> {\n}\npackage com.example.demo.service;\n\nimport com.example.demo.exception.GenderException;\nimport com.example.demo.model.Employee;\nimport com.example.demo.repository.EmployeeRepository;\nimport org.junit.jupiter.api.Test;\nimport org.mockito.InjectMocks;\nimport org.mockito.Mock;\nimport org.mockito.Mockito;\nimport org.springframework.boot.test.context.SpringBootTest;\n\nimport java.util.Optional;\n\nimport static org.junit.jupiter.api.Assertions.assertThrows;\nimport static org.mockito.ArgumentMatchers.anyLong;\nimport static org.mockito.Mockito.when;\n\n@SpringBootTest\npublic class EmployeeServiceTest {\n\n    @InjectMocks\n    private EmployeeService employeeService;\n\n    @Mock\n    private EmployeeRepository employeeRepository;\n\n    @Test\n    public void deleteEmployee_GenderFemenino_ThrowsGenderException() {\n        Employee employee = new Employee();\n        employee.setGender(\"Femenino\");\n\n        when(employeeRepository.findById(anyLong())).thenReturn(Optional.of(employee));\n\n        assertThrows(GenderException.class, () -> employeeService.deleteEmployee(1L));\n    }\n\n    @Test\n    public void deleteEmployee_GenderMasculino_DeletesSuccessfully() {\n        Employee employee = new Employee();\n        employee.setGender(\"Masculino\");\n\n        when(employeeRepository.findById(anyLong())).thenReturn(Optional.of(employee));\n\n        employeeService.deleteEmployee(1L);\n        Mockito.verify(employeeRepository, Mockito.times(1)).delete(employee);\n    }\n}",
        "refusal": null,
        "annotations": []
      },
      "logprobs": null,
      "finish_reason": "stop"
    }
  ],
  "usage": {
    "prompt_tokens": 281,
    "completion_tokens": 552,
    "total_tokens": 833,
    "prompt_tokens_details": {
      "cached_tokens": 0,
      "audio_tokens": 0
    },
    "completion_tokens_details": {
      "reasoning_tokens": 0,
      "audio_tokens": 0,
      "accepted_prediction_tokens": 0,
      "rejected_prediction_tokens": 0
    }
  },
  "service_tier": "default",
  "system_fingerprint": null
}
