{
  "id": "chatcmpl-BfG4KxzDhBwL6bi67xVBsA017hTLU",
  "object": "chat.completion",
  "created": 1749172916,
  "model": "gpt-4-0613",
  "choices": [
    {
      "index": 0,
      "message": {
        "role": "assistant",
        "content": "package com.example.demo.service;\n\nimport com.example.demo.entity.Employee;\nimport com.example.demo.repository.EmployeeRepository;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\n\nimport java.util.List;\nimport java.util.stream.Collectors;\n\n@Service\npublic class EmployeeService {\n\n    @Autowired\n    private EmployeeRepository employeeRepository;\n\n    public List<Employee> getEmployeesBornBefore2000() {\n        return employeeRepository.findAll().stream()\n                .filter(employee -> employee.getBirthDate().getYear() < 2000)\n                .collect(Collectors.toList());\n    }\n}\n\npackage com.example.demo.repository;\n\nimport com.example.demo.entity.Employee;\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.stereotype.Repository;\n\n@Repository\npublic interface EmployeeRepository extends JpaRepository<Employee, Long> {\n}\n\npackage com.example.demo.entity;\n\nimport javax.persistence.Entity;\nimport javax.persistence.GeneratedValue;\nimport javax.persistence.GenerationType;\nimport javax.persistence.Id;\nimport java.time.LocalDate;\n\n@Entity\npublic class Employee {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.AUTO)\n    private Long id;\n    private String name;\n    private LocalDate birthDate;\n\n    // getters and setters\n}\n\npackage com.example.demo.service;\n\nimport com.example.demo.entity.Employee;\nimport com.example.demo.repository.EmployeeRepository;\nimport org.junit.jupiter.api.Test;\nimport org.mockito.InjectMocks;\nimport org.mockito.Mock;\nimport static org.mockito.Mockito.when;\nimport org.springframework.boot.test.context.SpringBootTest;\n\nimport java.time.LocalDate;\nimport java.util.Arrays;\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.assertEquals;\n\n@SpringBootTest\npublic class EmployeeServiceTest {\n\n    @InjectMocks\n    private EmployeeService employeeService;\n\n    @Mock\n    private EmployeeRepository employeeRepository;\n\n    @Test\n    public void testGetEmployeesBornBefore2000() {\n        Employee employee1 = new Employee();\n        employee1.setBirthDate(LocalDate.of(1990, 1, 1));\n\n        Employee employee2 = new Employee();\n        employee2.setBirthDate(LocalDate.of(2000, 1, 1));\n\n        when(employeeRepository.findAll()).thenReturn(Arrays.asList(employee1, employee2));\n\n        List<Employee> result = employeeService.getEmployeesBornBefore2000();\n\n        assertEquals(1, result.size());\n        assertEquals(employee1, result.get(0));\n    }\n}",
        "refusal": null,
        "annotations": []
      },
      "logprobs": null,
      "finish_reason": "stop"
    }
  ],
  "usage": {
    "prompt_tokens": 123,
    "completion_tokens": 453,
    "total_tokens": 576,
    "prompt_tokens_details": {
      "cached_tokens": 0,
      "audio_tokens": 0
    },
    "completion_tokens_details": {
      "reasoning_tokens": 0,
      "audio_tokens": 0,
      "accepted_prediction_tokens": 0,
      "rejected_prediction_tokens": 0
    }
  },
  "service_tier": "default",
  "system_fingerprint": null
}
