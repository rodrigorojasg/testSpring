{
  "id": "chatcmpl-BeU7MzV6CrKbvqjtnEYX8nIu46R7l",
  "object": "chat.completion",
  "created": 1748988592,
  "model": "gpt-4-0613",
  "choices": [
    {
      "index": 0,
      "message": {
        "role": "assistant",
        "content": "package test.core.api.model;\n\nimport javax.persistence.*;\nimport java.time.LocalDate;\n\n@Entity\n@Table(name = \"employees\")\npublic class Employee {\n\n    @Id\n    @GeneratedValue(strategy = GenerationType.IDENTITY)\n    private Long id;\n\n    @Column(name = \"name\")\n    private String name;\n\n    @Column(name = \"birth_date\")\n    private LocalDate birthDate;\n\n    // getters and setters\n}\n\npackage test.core.api.repository;\n\nimport org.springframework.data.jpa.repository.JpaRepository;\nimport org.springframework.data.jpa.repository.Query;\nimport org.springframework.stereotype.Repository;\nimport test.core.api.model.Employee;\n\nimport java.time.LocalDate;\nimport java.util.List;\n\n@Repository\npublic interface EmployeeRepository extends JpaRepository<Employee, Long> {\n\n    @Query(\"SELECT e FROM Employee e WHERE e.birthDate < :date\")\n    List<Employee> findAllBornBefore(LocalDate date);\n}\n\npackage test.core.api.service;\n\nimport test.core.api.model.Employee;\n\nimport java.util.List;\n\npublic interface EmployeeService {\n    List<Employee> getEmployeesBornBeforeYear(int year);\n}\n\npackage test.core.api.service.impl;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Service;\nimport test.core.api.model.Employee;\nimport test.core.api.repository.EmployeeRepository;\nimport test.core.api.service.EmployeeService;\n\nimport java.time.LocalDate;\nimport java.util.List;\n\n@Service\npublic class EmployeeServiceImpl implements EmployeeService {\n\n    @Autowired\n    private EmployeeRepository employeeRepository;\n\n    @Override\n    public List<Employee> getEmployeesBornBeforeYear(int year) {\n        LocalDate date = LocalDate.of(year, 1, 1);\n        return employeeRepository.findAllBornBefore(date);\n    }\n}\n\npackage test.core.api.controller;\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport test.core.api.model.Employee;\nimport test.core.api.service.EmployeeService;\n\nimport java.util.List;\n\n@RestController\n@RequestMapping(\"/api/employees\")\npublic class EmployeeController {\n\n    @Autowired\n    private EmployeeService employeeService;\n\n    @GetMapping(\"/born-before-2000\")\n    public List<Employee> getEmployeesBornBefore2000() {\n        return employeeService.getEmployeesBornBeforeYear(2000);\n    }\n}\n\npackage test.core.api;\n\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\npublic class EmployeeCoreApiApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(EmployeeCoreApiApplication.class, args);\n    }\n}\n\npackage test.core.api.service;\n\nimport org.junit.jupiter.api.Test;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport test.core.api.model.Employee;\nimport test.core.api.service.EmployeeService;\n\nimport java.util.List;\n\nimport static org.junit.jupiter.api.Assertions.assertTrue;\n\n@SpringBootTest\npublic class EmployeeServiceTest {\n\n    @Autowired\n    private EmployeeService employeeService;\n\n    @Test\n    public void testGetEmployeesBornBefore2000() {\n        List<Employee> employees = employeeService.getEmployeesBornBeforeYear(2000);\n        assertTrue(employees.stream().allMatch(e -> e.getBirthDate().getYear() < 2000));\n    }\n}",
        "refusal": null,
        "annotations": []
      },
      "logprobs": null,
      "finish_reason": "stop"
    }
  ],
  "usage": {
    "prompt_tokens": 219,
    "completion_tokens": 628,
    "total_tokens": 847,
    "prompt_tokens_details": {
      "cached_tokens": 0,
      "audio_tokens": 0
    },
    "completion_tokens_details": {
      "reasoning_tokens": 0,
      "audio_tokens": 0,
      "accepted_prediction_tokens": 0,
      "rejected_prediction_tokens": 0
    }
  },
  "service_tier": "default",
  "system_fingerprint": null
}
