--- HISTORIA DE USUARIO ---
id: HDU-EMP-003
titulo: Prevenir eliminación de empleadas
actor: Administrador del sistema
descripcion: >
  Como administrador del sistema,
  quiero que no se permita eliminar empleados de género femenino,
  para cumplir con la normativa interna de no eliminar registros históricos sensibles.

criterios_aceptacion:
  - Si se intenta eliminar un empleado con género "Femenino", se debe lanzar una excepción o retornar un error controlado.
  - Si el empleado es de género "Masculino" u otro valor, se permite la eliminación normal.
  - El método de eliminación actual debe ser modificado para incluir esta validación.
  - No debe eliminarse ninguna lógica existente que ya esté implementada en ese método.
  - Se deben mantener todos los métodos actuales sin eliminación ni reemplazo.
  - La modificación debe estar delimitada por comentarios que indiquen claramente el inicio y fin del cambio realizado por la IA.


--- DIAGNÓSTICO Y PLAN DE CLASES ---
--- ANÁLISIS DE CLASES EXISTENTES ---

| Clase Java | Clasificación | Motivo |
|------------|----------------|--------|
| Employee | REUTILIZABLE-AS-IS | Contiene atributo `gender` necesario para la validación. |
| EmployeeRepository | REUTILIZABLE-AS-IS | No se requiere modificación, ya que solo se encarga de las operaciones de base de datos. |
| EmployeeService | REUTILIZABLE-AS-IS | La interfaz del servicio no necesita modificaciones. |
| EmployeeServiceImpl | MODIFICABLE | Necesita una modificación en el método `deleteEmployeeById` para agregar la validación requerida. |
| EmployeeController | REUTILIZABLE-AS-IS | No se requiere modificación, ya que solo se encarga de manejar las solicitudes HTTP. |

--- PLAN DE MODIFICACIÓN ---

1. Clase `EmployeeServiceImpl`: Modificar el método `deleteEmployeeById` para agregar una validación que verifique el género del empleado antes de eliminarlo. Si el género es "Femenino", se debe lanzar una excepción. Si el género es "Masculino" u otro valor, se permite la eliminación normal.

--- CÓDIGO A GENERAR ---

No se proporcionará código en esta etapa, ya que solo se solicita un análisis de las clases existentes y un plan de modificación. El código se proporcionará en la siguiente etapa del proceso.

--- INSTRUCCIONES DE GENERACIÓN DE CÓDIGO ---
- Modifica únicamente las clases marcadas como MODIFICABLE.
- Crea nuevas clases solo si están indicadas como NUEVA.
- No cambies de paquete ni nombre de clase.
- Si modificas un método, inclúyelo completo con su lógica anterior más la nueva.
- No omitas lógica existente.
- Cada clase debe comenzar con `package ...`.
- Devuelve únicamente clases y tests JUnit 5 válidos.
- No incluyas explicaciones ni comentarios adicionales.

